{
  "openapi": "3.0.3",
  "info": {
    "title": "Con Yappa’s API",
    "version": "1.0.0",
    "x-logo": {
      "url": "static/svg/logo.svg",
      "altText": "Con Yappa logo"
    }
  },
  "servers": [
    {
      "url": "http://localhost:8000",
      "description": "Development server"
    },
    {
      "url": "https://api-staging.conyappa.cl",
      "description": "Staging server"
    },
    {
      "url": "https://api.conyappa.cl",
      "description": "Production server"
    }
  ],
  "tags": [
    {
      "name": "Accounts"
    },
    {
      "name": "Lottery"
    },
    {
      "name": "Misc"
    }
  ],
  "paths": {
    "/v1/login": {
      "post": {
        "summary": "Obtain JSON Web Sliding Token",
        "tags": ["Accounts"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "./schemas/login.json"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "./schemas/login.json"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "enum": [
                        "No active account found with the given credentials"
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1/users": {
      "post": {
        "summary": "Create a user",
        "tags": ["Accounts"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "./schemas/user.json"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "./schemas/user.json"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "<field>": {
                      "type": "string",
                      "enum": ["user with this <field> already exists."]
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1/users/{user_id}": {
      "get": {
        "summary": "Retrieve a user",
        "tags": ["Accounts"],
        "parameters": [
          {
            "in": "path",
            "name": "user_id",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "./schemas/user.json"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/default_401"
          },
          "403": {
            "$ref": "#/components/responses/default_403"
          },
          "404": {
            "$ref": "#/components/responses/default_404"
          }
        }
      },
      "patch": {
        "summary": "Update a user",
        "tags": ["Accounts"],
        "parameters": [
          {
            "in": "path",
            "name": "user_id",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "./schemas/user.json"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/default_401"
          },
          "403": {
            "$ref": "#/components/responses/default_403"
          },
          "404": {
            "$ref": "#/components/responses/default_404"
          }
        }
      }
    },
    "/v1/draws": {
      "post": {
        "summary": "Create a draw [for internal communication only]",
        "description": "Creates an empty draw (_i.e._, with no results) and the corresponding tickets for all active users.",
        "tags": ["Lottery"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "./schemas/draw.json"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "./schemas/draw.json"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/default_401"
          },
          "403": {
            "$ref": "#/components/responses/default_403"
          }
        }
      }
    },
    "": {
      "get": {
        "summary": "Health check",
        "tags": ["Misc"],
        "responses": {
          "200": {
            "description": "OK"
          },
          "503": {
            "description": "Service Unavailable (something’s not right)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "enum": [
                        "Can't connect to database.",
                        "Unknown database problem."
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/error": {
      "get": {
        "summary": "Trigger an error",
        "tags": ["Misc"],
        "responses": {
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    },
    "responses": {
      "default_401": {
        "description": "Unauthorized",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "detail": {
                  "type": "string",
                  "enum": ["Given token not valid for any token type"]
                },
                "code": {
                  "type": "string",
                  "enum": ["token_not_valid"]
                },
                "messages": {
                  "type": "array",
                  "items": {
                    "type": "object"
                  }
                }
              }
            }
          }
        }
      },
      "default_403": {
        "description": "Forbidden",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "detail": {
                  "type": "string",
                  "enum": ["You do not have permission to perform this action."]
                }
              }
            }
          }
        }
      },
      "default_404": {
        "description": "Not Found",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "detail": {
                  "type": "string",
                  "enum": ["Not found."]
                }
              }
            }
          }
        }
      }
    }
  }
}
